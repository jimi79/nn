Q learning and NN

ok, i know that, one state is the right one
i know, approximately, thx to http://mnemstudio.org/path-finding-q-learning-tutorial.htm, that it's possible to have a matrice that says, to go from state to another one, take the best path (with random if none), and that will update the best state to go to

so, i know, after 'trained' the q learning, what is the best path to go from start to end.

So, i know, for a given state S, the next best state to be to (called S')
So i just have to train my NN so, if i enter S as an input, the output is S'. I so have my training dataset.



Now, for somethg like fonzobot, it means that i could have some NN that can go to a given direction if i tell him what's around (close or far away ?)
and maybe another NN that is able to know what to do in a given situation.

and maybe one that decide if it should move to a given direction, or fight somethg, etc.


Still have some stuff to go trhough.


First : a NN that plays the game that goes from 0 to 100


Note important : if the action is picked at random because none is ok, then we don't backpropagate anythg. I mean, we have to sort of wait for the status matrice to be updated.

Or maybe we should do BP, but with a pretty low alpha, based on the level written in the matrice maybe
i mean if the new state is 0 anyway, because we are in a new world, then alpha is 0, meaning no update.
If the new state is like 1000000, then alpha should be 1 (maxed out), because we know for sure that's the right new state.


Now the other issue, is that if we do BP, that doesn't mean the NN will make the correct decision next time. Meaning we need to simulate thousands of games before it works properly.

(i really need to get trained with the 0 100 game first)



--> i just don't know
